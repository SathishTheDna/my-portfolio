{"version":3,"file":"static/js/556.af0702fe.chunk.js","mappings":"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","sources":["components/contact/ContactDetails.jsx","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","components/contact/ContactForm.jsx","pages/Contact.jsx"],"sourcesContent":["import { FiLinkedin, FiMapPin, FiMail } from 'react-icons/fi';\r\n\r\nconst contacts = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tname: 'Bergen, Norway',\r\n\t\turl: '',\r\n\t\ticon: <FiMapPin />,\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tname: 'sathishrajabommannan@gmail.com',\r\n\t\turl: 'mailto:sathishrajabommannan@gmail.com',\r\n\t\ticon: <FiMail />,\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tname: 'Sathish Raja Bommannan',\r\n\t\turl: 'https://www.linkedin.com/in/sathish-raja-bommannan/',\r\n\t\ticon: <FiLinkedin />,\r\n\t},\r\n];\r\n\r\nconst ContactDetails = () => {\r\n\treturn (\r\n\t\t<div className=\"w-full lg:w-1/2\">\r\n\t\t\t<div className=\"text-left max-w-xl px-6\">\r\n\t\t\t\t<h2 className=\"font-general-medium text-2xl text-primary-dark dark:text-primary-light mt-12 mb-8\">\r\n\t\t\t\t\tContact Details\r\n\t\t\t\t</h2>\r\n\t\t\t\t<ul className=\"font-general-regular\">\r\n\t\t\t\t\t{contacts.map((contact) => (\r\n\t\t\t\t\t\t<li className=\"flex \" key={contact.id}>\r\n\t\t\t\t\t\t\t<i className=\"text-2xl text-gray-500 dark:text-gray-400 mr-4\">\r\n\t\t\t\t\t\t\t\t{contact.icon}\r\n\t\t\t\t\t\t\t</i>\r\n\r\n\t\t\t\t\t\t\t<span className=\"text-lg mb-4 text-ternary-dark dark:text-ternary-light\">\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t!contact.url ?\r\n\t\t\t\t\t\t\t\t\t\tcontact.name :\r\n\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\thref={contact.url}\r\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"__blank\"\r\n\t\t\t\t\t\t\t\t\t\t\tkey={contact.id}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{contact.name}\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ContactDetails;\r\n","export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.3.3',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","import React, { useState } from 'react';\r\nimport emailjs from '@emailjs/browser';\r\n\r\nfunction ContactForm() {\r\n    const [formData, setFormData] = useState({\r\n        fullName: '',\r\n        email: '',\r\n        subject: '',\r\n        message: ''\r\n    });\r\n\r\n    const [formErrors, setFormErrors] = useState({\r\n        email: '',\r\n        message: ''\r\n    });\r\n\r\n    const handleInputChange = (field, value) => {\r\n        setFormData({\r\n            ...formData,\r\n            [field]: value\r\n        });\r\n    };\r\n\r\n    const handleValidation = () => {\r\n        let errors = {};\r\n        let isValid = true;\r\n\r\n        if (!formData.email) {\r\n            errors.email = 'This field is required';\r\n            isValid = false;\r\n        }\r\n        else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n            errors.email = 'This field must contain a valid email';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.message) {\r\n            errors.message = 'This field is required';\r\n            isValid = false;\r\n        }\r\n\r\n        setFormErrors(errors);\r\n        return isValid;\r\n    };\r\n    \r\n    /* Using EmailJS Service to send mail */\r\n    const emailjs_serviceId = 'service_0wkd274';\r\n\tconst emailjs_templateId = 'template_3c0qcur';\r\n\tconst emailjs_publicKey = 'NEznchN9YJ9QuU-nr';\r\n\r\n    let emailjs_templateParams = {\r\n\t\tsender_name: formData.fullName,\r\n\t\tsender_email: formData.email,\r\n\t\tsubject: formData.subject,\r\n\t\tmessage: formData.message\r\n\t};\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (handleValidation()) {\r\n            // All checks passed, proceed with sending message\r\n            console.log('Sending message:', formData);\r\n\r\n            emailjs.send(emailjs_serviceId, emailjs_templateId, emailjs_templateParams, emailjs_publicKey)\r\n                .then((response) => {\r\n                    console.log('Email sent successfully:', response);\r\n\r\n                    setFormData({\r\n                        fullName: '',\r\n                        email: '',\r\n                        subject: '',\r\n                        message: ''\r\n                    });\r\n\r\n                    alert(\"Message sent successfully!\");\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error sending email:', error);\r\n\r\n                    alert(\"Unable to send your message. Please try again, or you can email me directly.\");\r\n                });\r\n        } else {\r\n            console.log('Form has errors, cannot send message');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='w-full lg:w-1/2'>\r\n            <div className='leading-loose'>\r\n            <form \r\n                onSubmit={handleSubmit}\r\n                className=\"max-w-xl m-4 p-6 sm:p-10 bg-secondary-light dark:bg-secondary-dark rounded-xl shadow-xl text-left\"\r\n            >\r\n                <div className=\"font-general-regular mb-4\">\r\n                    <label \r\n                        className=\"block text-lg text-primary-dark dark:text-primary-light mb-1\"\r\n                        htmlFor='name'\r\n                    >\r\n                        Full Name\r\n                    </label>\r\n                    <input \r\n                        className=\"w-full px-5 py-2 border border-gray-300 dark:border-primary-dark border-opacity-50 text-primary-dark dark:text-secondary-light bg-ternary-light dark:bg-ternary-dark rounded-md shadow-sm text-md\"\r\n                        type=\"text\"\r\n                        id =\"name\"\r\n                        name=\"name\"\r\n                        aria-label=\"Name\"\r\n                        value={formData.fullName} \r\n                        onChange={(e) => handleInputChange('fullName', e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"font-general-regular mb-4\">\r\n                    <label \r\n                        className=\"block text-lg text-primary-dark dark:text-primary-light mb-1\"\r\n                        htmlFor='email'\r\n                    >\r\n                        Email *\r\n                    </label>\r\n                    <input \r\n                        className=\"w-full px-5 py-2 border border-gray-300 dark:border-primary-dark border-opacity-50 text-primary-dark dark:text-secondary-light bg-ternary-light dark:bg-ternary-dark rounded-md shadow-sm text-md\"\r\n                        type=\"text\"\r\n                        id =\"email\"\r\n                        name=\"email\"\r\n                        aria-label=\"Email\"\r\n                        value={formData.email} \r\n                        onChange={(e) => handleInputChange('email', e.target.value)}\r\n                    />\r\n                    {formErrors.email && <span className=\"text-sm text-primary-dark dark:text-primary-light mb-1\">{formErrors.email}</span>}\r\n                </div>\r\n                <div className=\"font-general-regular mb-4\">\r\n                    <label \r\n                        className=\"block text-lg text-primary-dark dark:text-primary-light mb-1\"\r\n                        htmlFor='subject'\r\n                    >\r\n                        Subject\r\n                    </label>\r\n                    <input \r\n                        className=\"w-full px-5 py-2 border border-gray-300 dark:border-primary-dark border-opacity-50 text-primary-dark dark:text-secondary-light bg-ternary-light dark:bg-ternary-dark rounded-md shadow-sm text-md\"\r\n                        type=\"text\"\r\n                        id=\"subject\"\r\n                        name=\"subject\"\r\n                        aria-label=\"Subject\"\r\n                        value={formData.subject} \r\n                        onChange={(e) => handleInputChange('subject', e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                    <label \r\n                        className=\"block text-lg text-primary-dark dark:text-primary-light mb-2\"\r\n                        htmlFor=\"message\"\r\n                    >\r\n                        Message *\r\n                    </label>\r\n                    <textarea\r\n                        className=\"w-full px-5 py-2 border border-gray-300 dark:border-primary-dark border-opacity-50 text-primary-dark dark:text-secondary-light bg-ternary-light dark:bg-ternary-dark rounded-md shadow-sm text-md\"\r\n                        id=\"message\"\r\n                        name=\"message\"\r\n                        cols=\"14\"\r\n                        rows=\"6\"\r\n                        aria-label=\"Message\"\r\n                        value={formData.message}\r\n                        onChange={(e) => handleInputChange('message', e.target.value)}\r\n                    ></textarea>\r\n                    {formErrors.message && <span className=\"text-sm text-primary-dark dark:text-primary-light mb-1\">{formErrors.message}</span>}\r\n                </div>\r\n\r\n                <div className=\"font-general-medium w-40 px-4 py-2.5 text-white text-center font-medium tracking-wider bg-indigo-500 hover:bg-indigo-600 focus:ring-1 focus:ring-indigo-900 rounded-lg mt-6 duration-500\">\r\n                    <button\r\n                        title=\"Send Message\"\r\n                        type=\"submit\"\r\n                        aria-label=\"Send Message\"\r\n                    >\r\n                        Send Message\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { motion } from 'framer-motion';\r\nimport ContactDetails from '../components/contact/ContactDetails';\r\nimport ContactForm from '../components/contact/ContactForm';\r\n\r\nconst Contact = () => {\r\n\treturn (\r\n\t\t<motion.div\r\n\t\t\tinitial={{ opacity: 0 }}\r\n\t\t\tanimate={{ opacity: 1 }}\r\n\t\t\ttransition={{\r\n\t\t\t\tease: 'easeInOut',\r\n\t\t\t\tduration: 0.5,\r\n\t\t\t\tdelay: 0.1,\r\n\t\t\t}}\r\n\t\t\tclassName=\"container mx-auto flex flex-col-reverse lg:flex-row py-5 lg:py-10 lg:mt-10\"\r\n\t\t>\r\n\t\t\t<ContactForm />\r\n\t\t\t<ContactDetails />\r\n\t\t</motion.div>\r\n\t);\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["contacts","id","name","url","icon","_jsx","FiMapPin","FiMail","FiLinkedin","ContactDetails","className","children","_jsxs","map","contact","href","target","EmailJSResponseStatus","constructor","_status","arguments","length","undefined","_text","this","status","text","store","origin","blockHeadless","storageProvider","createWebStorage","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","buildOptions","options","publicKey","toString","sendPost","async","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","headlessError","isBlockedValueInParams","params","_options$list","list","watchVariable","isBlockListDisabled","validateBlockListParams","Array","isArray","FormData","getValue","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","validateLimitRateParams","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","templateParams","opts","blockList","limitRate","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","formData","setFormData","useState","fullName","email","subject","formErrors","setFormErrors","handleInputChange","field","emailjs_templateParams","sender_name","sender_email","onSubmit","event","preventDefault","handleValidation","errors","isValid","test","console","log","emailjs","then","alert","catch","error","htmlFor","type","onChange","e","cols","rows","title","Contact","motion","div","initial","opacity","animate","transition","ease","duration","delay","ContactForm"],"sourceRoot":""}